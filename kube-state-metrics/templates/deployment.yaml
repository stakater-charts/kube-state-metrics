apiVersion: apps/v1beta1
# Kubernetes versions after 1.9.0 should use apps/v1
kind: Deployment
metadata:
  name: {{ template "kube-state-metrics.name" . }}
  labels:
{{ include "kube-state-metrics.labels.stakater" . | indent 4 }}
{{ include "kube-state-metrics.labels.chart" . | indent 4 }}
spec:
  selector:
    matchLabels:
      k8s-app: {{ template "kube-state-metrics.name" . }}
  replicas: {{ .Values.kubeStateMetrics.deployment.replicas }}
  template:
    metadata:
      labels:
        k8s-app: {{ template "kube-state-metrics.name" . }}
    spec:
      serviceAccountName: {{ template "kube-state-metrics.name" . }}
      {{- if .Values.kubeStateMetrics.tolerations }}
      tolerations:
{{ toYaml .Values.kubeStateMetrics.tolerations | indent 8 -}}
      {{- end }}
      containers:
      - name: {{ template "kube-state-metrics.name" . }}
        image: "{{ .Values.kubeStateMetrics.image.name }}:{{ .Values.kubeStateMetrics.image.tag }}"
        ports:
        - name: http-metrics
          containerPort: 8080
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: {{ .Values.kubeStateMetrics.deployment.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.kubeStateMetrics.deployment.timeoutSeconds }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: {{ .Values.kubeStateMetrics.deployment.livenessInitialDelaySeconds }}
          timeoutSeconds: {{ .Values.kubeStateMetrics.deployment.livenessTimeoutSeconds }}
        {{- with .Values.kubeStateMetrics.deployment.resources }}
        resources:
          {{- with .requests }}
          requests:
            {{- with .memory }}
            memory: {{ . }}
            {{- end }}
            {{- with .cpu }}
            cpu: {{ . }}
            {{- end }}
          {{- end }}
          {{- with .limits }}
          limits:
            {{- with .memory }}
            memory: {{ . }}
            {{- end }}
            {{- with .cpu }}
            cpu: {{ . }}
            {{- end }}
          {{- end }}
        {{- end }}
      - name: addon-resizer
        image: "{{ .Values.kubeStateMetrics.addonResizer.name }}:{{ .Values.kubeStateMetrics.addonResizer.tag }}"
        {{- with .Values.kubeStateMetrics.addonResizer.resources }}
        resources:
          {{- with .limits }}
          limits:
            {{- with .cpu }}
            cpu: {{ . }}
            {{- end }}
            {{- with .memory }}
            memory: {{ . }}
            {{- end }}
          {{- end }}
          {{- with .requests }}
          requests:
            {{- with .cpu }}
            cpu: {{ . }}
            {{- end }}
            {{- with .memory }}
            memory: {{ . }}
            {{- end }}
          {{- end }}
        {{- end }}
        env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        command:
          - /pod_nanny
          - --container={{ template "kube-state-metrics.name" . }}
          - --cpu={{ .Values.kubeStateMetrics.addonResizer.commands.cpu }}
          - --extra-cpu={{ .Values.kubeStateMetrics.addonResizer.commands.extraCpu }}
          - --memory={{ .Values.kubeStateMetrics.addonResizer.commands.memory }}
          - --extra-memory={{ .Values.kubeStateMetrics.addonResizer.commands.extraMemory }}
          - --threshold={{ .Values.kubeStateMetrics.addonResizer.commands.threshold }}
          - --deployment={{ template "kube-state-metrics.name" . }}
      securityContext: {}
      {{- if .Values.kubeStateMetrics.deployment.nodeSelector }}  
      nodeSelector:
        {{ .Values.kubeStateMetrics.deployment.nodeSelector.key }}: {{ .Values.kubeStateMetrics.deployment.nodeSelector.value }}
      {{- end }}     